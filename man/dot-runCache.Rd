% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache.R
\name{.runCache}
\alias{.runCache}
\alias{.runCache,function-method}
\title{Run function and save cache}
\usage{
.runCache(
  fun,
  ...,
  seed = NULL,
  base_dir = NULL,
  cache_prefix = "generic_cache",
  cache_digest = list(),
  show_message = NULL,
  force_recalc = FALSE,
  add_to_hash = NULL
)

\S4method{.runCache}{function}(
  fun,
  ...,
  seed = NULL,
  base_dir = NULL,
  cache_prefix = "generic_cache",
  cache_digest = list(),
  show_message = NULL,
  force_recalc = FALSE,
  add_to_hash = NULL
)
}
\arguments{
\item{fun}{function call name}

\item{...}{parameters for function call}

\item{seed}{when function call is random, this allows to set seed beforehand}

\item{cache_prefix}{prefix for file name to be generated from
parameters (...)}

\item{cache_digest}{cache of the digest for one or more of the parameters}

\item{show_message}{show message that data is being retrieved from cache}

\item{force_recalc}{force the recalculation of the values}

\item{add_to_hash}{something to add to the filename generation}

\item{base.dir}{directory where data is stored}
}
\value{
the result of fun(...)
}
\description{
This method saves the function that's being called
}
\section{Functions}{
\itemize{
\item \code{.runCache(`function`)}: accepts function as first argument and save cache

}}
\examples{
# [optional] save cache in a temporary directory
#
glmSparseNet:::.baseDir(tempdir())
glmSparseNet:::.runCache(c, 1, 2, 3, 4)
#
# next three should use the same cache
#  note, the middle call should be a little faster as digest is not
#  calculated
#   for the first argument
glmSparseNet:::.runCache(c, 1, 2, 3, 4)
glmSparseNet:::.runCache(c, a = 1, 2, c = 3, 4)
\donttest{
# Using a local folder
# glmSparseNet:::.runCache(c, 1, 2, 3, 4, base_dir = "runcache")
}
}
