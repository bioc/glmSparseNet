---
name: Check Style 🎨

on:
  # 'push' events are triggered when commits
  # are pushed to one of these branches
  push:
    branches:
      - devel
    tags:
      - "v*"
  # 'pull_request' events are triggered when PRs are
  # created against one of these target branches.
  pull_request:
    types:
    - opened
    - synchronize
    - reopened
    - ready_for_review
    branches:
      - devel
  # 'workflow_dispatch' gives you the ability
  # to run this workflow on demand, anytime
  workflow_dispatch:

concurrency:
  group: style-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  style:
    name: Check code style 🧑‍🎨
    runs-on: ubuntu-latest
    if: >
      !contains(github.event.commits[0].message, '[skip stylecheck]')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup R 📊
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Install R package dependencies 📦
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::styler, any::roxygen2
          needs: styler

      - name: Enable styler cache
        run: styler::cache_activate()
        shell: Rscript {0}

      - name: Determine cache location
        id: styler-location
        run: |
          cat(
            "location=",
            styler::cache_info(format = "tabular")$location,
            "\n",
            file = Sys.getenv("GITHUB_OUTPUT"),
            append = TRUE,
            sep = ""
          )
        shell: Rscript {0}

      - name: Cache styler
        uses: actions/cache@v4
        with:
          path: ${{ steps.styler-location.outputs.location }}
          key: ${{ runner.os }}-styler-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-styler-
            ${{ runner.os }}-

      - name: Run styler 🖼️
        run: |
          detect <- styler::style_pkg(dry = "on")
          if (any(detect$changed)) {
            problems <- subset(detect$file, detect$changed == T)
            cat(paste("Styling errors found in", length(problems), "files\n"))
            cat("Please run `styler::style_pkg()` to fix the style\n")
            quit(status = 1)
          }
        shell: Rscript {0}
